package personnages.entite;

import interfacejeu.MapMilieu;

/**
 * Repr√©sente une entit√© pr√©sente sur la carte (joueur, monstre...).
 * Fournit un contrat pour l'affichage, les points de vie et la position.
 */
public interface Entite {

    /**
     * Affichage ASCII ou unicode de l‚Äôentit√© (ex: "üëæ").
     */
    String affichageClass();

    /**
     * Affichage court (symbole ou lettre unique pour la grille).
     */
    String getAffichageCourt();

    /**
     * Affichage long (nom complet + infos).
     */
    String getAffichageLong();

    /**
     * Coordonn√©e X de l'entit√© sur la carte.
     */
    int getPosX();

    /**
     * Coordonn√©e Y de l'entit√© sur la carte.
     */
    int getPosY();

    /**
     * Tente de d√©finir une nouvelle position si la case est libre.
     * @param x nouvelle position X
     * @param y nouvelle position Y
     * @param map carte du jeu
     * @return true si le d√©placement est possible, false sinon
     */
    boolean setPosXY(int x, int y, MapMilieu map);

    /**
     * Nom de l‚Äôentit√©.
     */
    String getNom();

    /**
     * Initiative de l'entit√© (utilis√© pour l'ordre de combat).
     */
    int getInitiative();

    /**
     * Affiche les points de vie de l‚Äôentit√© sous forme de barre.
     */
    String afficherPVDB();

    /**
     * Applique des d√©g√¢ts √† l'entit√©.
     * @param degats quantit√© de d√©g√¢ts
     */
    void setPV(int degats);

    /**
     * D√©place l'entit√© sans v√©rifier les r√®gles (utilis√© en cas sp√©ciaux).
     */
    void setPosSansVerif(int x, int y);

    /**
     * Indique si l'entit√© est un monstre.
     */
    boolean estMonstre();

    /**
     * Indique si l'entit√© est morte.
     */
    boolean estMort();
}
